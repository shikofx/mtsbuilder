//+------------------------------------------------------------------+
//|                                                 ПорцияСделок.mqh |
//|                                Инвестиционная группа Витязи Духа |
//|                                                                  |
//+------------------------------------------------------------------+
#property copyright "Инвестиционная группа Витязи Духа"
#property link      ""
#property version   "1.00"
#property strict

#include "../Библиотеки/Перечисления.mqh"
#include "../Библиотеки/Структуры.mqh"
#include "../ПУС/Сделка.mqh"
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+

class ПорцияСделок
  {
private:
   ENUM_ЧИСЛО_СТУПЕНЕЙ размер_порции;
   int текущий_размер;
   STRUCT_ПОРЦИЯ_СДЕЛОК порция_сделок[14];
   double            вес_порции;
public:
                     ПорцияСделок(ENUM_ЧИСЛО_СТУПЕНЕЙ _размер,double &высота_ступени[14]);
                    ~ПорцияСделок();
   double            ВесВПорции(){return вес_порции;}
   void              ДобавитьСделку(Сделка *_сделка);
   void              ОбнулитьПорцию();
   int               ТекущийРазмер();
  };
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
ПорцияСделок::ПорцияСделок(ENUM_ЧИСЛО_СТУПЕНЕЙ _размер,double &_высота_ступени[14])
  {
   вес_порции=1;
   текущий_размер = 0;
   размер_порции=_размер;
   for(int i = 0; i<размер_порции;i++)
      {
      порция_сделок[i].тикет = -1;
      порция_сделок[i].добавка = _высота_ступени[i];
      }
  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
ПорцияСделок::~ПорцияСделок()
  {
  }
//+------------------------------------------------------------------+
void ПорцияСделок::ДобавитьСделку(Сделка *_сделка)
  {
   
   bool выбор=OrderSelect(_сделка.ТикетСделки(),SELECT_BY_TICKET,MODE_HISTORY);
 //  Comment(_сделка.ТикетСделки());
   if(выбор)
     {
      
      double прибыльСделки=OrderProfit();
      if(прибыльСделки>0)
         this.ОбнулитьПорцию();
      if(прибыльСделки<0)
        {
         int i=0;
         for(i=0; i<=размер_порции;i++)
           {
            if(i<размер_порции)
               {
               if(порция_сделок[i].тикет==-1)
                 {
                    
                  порция_сделок[i].тикет=_сделка.ТикетСделки();
                  текущий_размер++;
                  break;
                 }
                 }
           }

         if(i<(размер_порции-1))
           {
            вес_порции=вес_порции*порция_сделок[i].добавка;
           }

         if(i==(размер_порции-1))
           {
            this.ОбнулитьПорцию();
           }

        }
     }

  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
void ПорцияСделок::ОбнулитьПорцию()
  {
   for(int i=0; i<размер_порции; i++)
      порция_сделок[i].тикет=-1;
   вес_порции = 1;
   текущий_размер = 0;
  }
//+------------------------------------------------------------------+
int               ПорцияСделок::ТекущийРазмер()
{
   return текущий_размер;
}