//+------------------------------------------------------------------+
//|                                         “риоѕик.mqh |
//|                                »нвестиционна€ группа ¬ит€зи ƒуха |
//|                                                                  |
//+------------------------------------------------------------------+
#property copyright "»нвестиционна€ группа ¬ит€зи ƒуха"
#property link      ""
#property version   "1.00"
#property strict
#include "../—кольз€щие—редние/“рио.mqh"
#include "../‘ракталы/ѕик.mqh"
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
class “риоѕик
  {
private:

public:
   short             состо€ние_трио;
   short             состо€ние_пика;
   bool              ќпределить—осто€ние(“рио *_trio,ѕик *_pik);
   bool              ќпределить—осто€ние(ѕик *_pik,“рио *_trio);
   void              ќбнулить—осто€ни€();
                     “риоѕик();
                    ~“риоѕик();
  };
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
“риоѕик::“риоѕик()
  {
   состо€ние_трио=0;
   состо€ние_пика=0;
  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
“риоѕик::~“риоѕик()
  {
  }
//+------------------------------------------------------------------+
bool “риоѕик::ќпределить—осто€ние(“рио *_trio,ѕик *_pik)
  {
   bool результат=false;

   if(_trio.ѕересечение—редн€€Ѕыстра€()!=0)
      состо€ние_трио = 1;
   if(состо€ние_трио == 1 && _pik.—уществует())
     {
      int свеча=_pik.ѕолучить—вечи—права()+1;
      if(_pik.ѕолучитьЌаправление()==1)
        {
         if(Low[свеча] > _trio.Ѕыстра€«начение(свеча) &&
            Low[свеча] > _trio.ћедленна€«начение(свеча) &&
            Low[свеча] > _trio.—редн€€«начение(свеча))
           {
            результат=true;
            состо€ние_пика=1; // незапутанный пик
           }
         else
            состо€ние_пика=-1; //запутанный пик
        }
      if(_pik.ѕолучитьЌаправление()==0)
        {
         if(High[свеча]<_trio.Ѕыстра€«начение(свеча) && 
            High[свеча] < _trio.ћедленна€«начение(свеча) &&
            High[свеча] < _trio.—редн€€«начение(свеча))
           {
            результат=true;
            состо€ние_пика=1; // незапутанный пик
           }
         else
            состо€ние_пика=-1; //запутанный пик
        }
     }
   return результат;
  }
//+------------------------------------------------------------------+
void “риоѕик::ќбнулить—осто€ни€()
  {
   состо€ние_пика = false;
   состо€ние_трио = 0;

  }
//+------------------------------------------------------------------+
bool “риоѕик::ќпределить—осто€ние(ѕик *_pik,“рио *_trio)
  {
   bool результат=false;
   int свеча=0;

   if(_pik.—уществует())
     {
      свеча=_pik.ѕолучить—вечи—права()+1;
     }

   if(_pik.ѕолучитьЌаправление()==1)
     {
      /*if(Low[свеча]>_trio.Ѕыстра€«начение(свеча) && 
         //Low[свеча] > _trio.ћедленна€«начение(свеча) &&
         Low[свеча]>_trio.—редн€€«начение(свеча))*/
        {
         состо€ние_пика=1; // незапутанный пик
        }
     /* else
         состо€ние_пика=-1; //запутанный пик*/
     }
   if(_pik.ѕолучитьЌаправление()==0)
     {
    /*  if(High[свеча]<_trio.Ѕыстра€«начение(свеча) && 
        // High[свеча] < _trio.ћедленна€«начение(свеча) &&
         High[свеча]<_trio.—редн€€«начение(свеча))*/
        {
         состо€ние_пика=1; // незапутанный пик
        }
     /* else
         состо€ние_пика=-1; //запутанный пик*/
     }
   if(состо€ние_пика==1 && _trio.ѕересечение—редн€€Ѕыстра€()!=0)
     {
      результат=true;
      состо€ние_трио=1;
     }

   return результат;
  }
//+------------------------------------------------------------------+
