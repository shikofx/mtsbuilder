//+------------------------------------------------------------------+
//|                                                “орговое¬рем€.mqh |
//|                                »нвестиционна€ группа ¬ит€зи ƒуха |
//|                                                                  |
//+------------------------------------------------------------------+
#property copyright "»нвестиционна€ группа ¬ит€зи ƒуха"
#property link      ""
#property version   "1.00"
#property strict

#include "..\..\Ѕиблиотеки\‘ункции.mqh"
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
class “орговое¬рем€
  {
private:
   datetime          начало»нтервала;
   datetime          конец»нтервала;
   MqlDateTime       текущее¬рем€—тр; //текущее врем€ в структурированном виде
   MqlDateTime       врем€Ќачала—тр;//врем€ начала торговли
   MqlDateTime       врем€ онца—тр;//врем€ конца торговли
   int               часЌачала;
   int               минутаЌачала;
   int               час онца;
   int               минута онца;
   datetime          врем€ќткрыти€—делки;
   MqlDateTime       текущее¬рем€—вечи; //текущее врем€ в структурированном виде

public:
                     “орговое¬рем€();
                     “орговое¬рем€(int часЌ,int минутаЌ,int час ,int минута );
                     “орговое¬рем€(int часќ,int минутаќ);

                    ~“орговое¬рем€();
   void              ќбновить¬рем€();
   bool              внутри»нтервала();
   bool              ¬рем€ќткрыти€—делки();
   void              ќбновить¬рем€ќткрыти€();
  };
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
“орговое¬рем€::“орговое¬рем€()
  {
  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
“орговое¬рем€::“орговое¬рем€(int часЌ,int минутаЌ,int час ,int минута )
  {
   начало»нтервала= 0;
   конец»нтервала = 0;
   this.часЌачала=часЌ;
   this.минутаЌачала=минутаЌ;
   this.час онца=час ;
   this.минута онца=минута ;

  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
“орговое¬рем€::“орговое¬рем€(int часќ,int минутаќ)
  {
   начало»нтервала= 0;
   конец»нтервала = 0;
   this.часЌачала=часќ;
   this.минутаЌачала=минутаќ;

  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
“орговое¬рем€::~“орговое¬рем€()
  {

  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
void “орговое¬рем€::ќбновить¬рем€()
  {
   if(TimeCurrent()>конец»нтервала || конец»нтервала==0)
     {
      TimeToStruct(TimeCurrent(),текущее¬рем€—тр);
      врем€Ќачала—тр=текущее¬рем€—тр;
      врем€Ќачала—тр.hour=часЌачала;
      врем€Ќачала—тр.min=минутаЌачала;
      начало»нтервала=StructToTime(врем€Ќачала—тр);
      врем€ онца—тр=текущее¬рем€—тр;
      врем€ онца—тр.hour=час онца;
      врем€ онца—тр.min=минута онца;
      конец»нтервала=StructToTime(врем€ онца—тр);

     }
  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
bool “орговое¬рем€::внутри»нтервала()
  {
   this.ќбновить¬рем€();
   if((TimeCurrent()>=начало»нтервала && TimeCurrent()<=конец»нтервала) || начало»нтервала==конец»нтервала)
      return true;
   else
      return false;
  }
//+------------------------------------------------------------------+

void “орговое¬рем€::ќбновить¬рем€ќткрыти€()
  {
   TimeToStruct(Time[0],текущее¬рем€—вечи);
   врем€Ќачала—тр=текущее¬рем€—вечи;
   if(Period()<=60)
     {
      врем€Ќачала—тр.min=врем€Ќачала—тр.min+минутаЌачала; //—двиг в минутах от начала свечи
     }
   else
     {
      врем€Ќачала—тр.hour=врем€Ќачала—тр.hour+часЌачала; //—двиг в часах от начала свечи
      врем€Ќачала—тр.min=врем€Ќачала—тр.min+минутаЌачала; //—двиг в минутах от начала свечи
     }

   врем€ќткрыти€—делки=StructToTime(врем€Ќачала—тр);
  }
//+------------------------------------------------------------------+

bool “орговое¬рем€::¬рем€ќткрыти€—делки()
  {
   if(TimeCurrent()==врем€ќткрыти€—делки)
      return true;
      else
      return false;
      }
//+------------------------------------------------------------------+
