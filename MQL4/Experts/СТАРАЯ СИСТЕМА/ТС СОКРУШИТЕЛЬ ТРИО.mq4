//+------------------------------------------------------------------+
//|                                                    ПикиПиков.mq4 |
//|                         Инвестиционная группа "Витязи Духа" М.К. |
//|                                                                  |
//+------------------------------------------------------------------+
#property copyright "Инвестиционная группа Витязи Духа М.К."
#property link      ""
#property version   "1.00"
#property strict


#include  "ПАиПР/Фракталы/Пик.mqh"
#include  "ПАиПР/Фракталы/Фрактал.mqh"
#include  "ПАиПР/Фракталы/КомнатаФракталов.mqh"
#include  "ПАиПР/Фракталы/ОфисФракталов.mqh"
#include  "ПУС/Сделка.mqh"
#include  "ПУС/ПУК/ПорцияСделок.mqh"
#include  "ПАиПР/ЛинииБоуленджера/ЛинииБоуленджера.mqh"
#include  "ПАиПР/Время/ТорговоеВремя.mqh"
#include  "ПАиПР/БиблиотекаПАиПР.mq4"
#include  "ПАиПР/СкользящиеСредние/Трио.mqh"
#include  "ПАиПР/ФильтрыВзаимодействия/ТриоПик.mqh"
#include  "Библиотека/Терминал.mqh"
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
input double  ОБЪЕМ_СДЕЛКИ=0.01;
input bool       ПАРЦИАЛЬНОЕ_УПРАВЛЕНИЕ=false;
input bool       РАЗДЕЛЬНОЕ_УПРАВЛЕНИЕ = false;
input ENUM_РАЗМЕР_ПОРЦИИ РАЗМЕР_ПОРЦИИ=3;
input double РАЗМЕР_ДОБАВКИ1 = 2;
input double РАЗМЕР_ДОБАВКИ2 = 2;
input double РАЗМЕР_ДОБАВКИ3 = 2;
input double РАЗМЕР_ДОБАВКИ4 = 2;
input double РАЗМЕР_ДОБАВКИ5 = 2;
input double РАЗМЕР_ДОБАВКИ6 = 2;
input double РАЗМЕР_ДОБАВКИ7 = 2;
input double РАЗМЕР_ДОБАВКИ8 = 2;
input double РАЗМЕР_ДОБАВКИ9 = 2;
input double РАЗМЕР_ДОБАВКИ10 = 2;
input double РАЗМЕР_ДОБАВКИ11 = 2;
input double РАЗМЕР_ДОБАВКИ12 = 2;
input double РАЗМЕР_ДОБАВКИ13 = 2;
input double РАЗМЕР_ДОБАВКИ14 = 2;

input ENUM_СИМВОЛЫ     символ=NULL;

input ENUM_СИГНАЛЫ_ОТКРЫТИЯ СИГНАЛЫ_ОТКРЫТИЯ=фракталыСО;
input int МЕДЛЕННАЯ_ПЕРИОД = 13;
input int МЕДЛЕННАЯ_ГСДВИГ = 8;
input int МЕДЛЕННАЯ_ВСДВИГ = 0;
input ENUM_MA_METHOD МЕДЛЕННАЯ_МЕТОД=MODE_SMMA;
input ENUM_APPLIED_PRICE МЕДЛЕННАЯ_ТЦЕНЫ=PRICE_MEDIAN;

input int СРЕДНЯЯ_ПЕРИОД = 8;
input int СРЕДНЯЯ_ГСДВИГ = 5;
input int СРЕДНЯЯ_ВСДВИГ = 0;
input ENUM_MA_METHOD СРЕДНЯЯ_МЕТОД=MODE_SMMA;
input ENUM_APPLIED_PRICE СРЕДНЯЯ_ТЦЕНЫ=PRICE_MEDIAN;

input int БЫСТРАЯ_ПЕРИОД = 5;
input int БЫСТРАЯ_ГСДВИГ = 3;
input int БЫСТРАЯ_ВСДВИГ = 0;
input ENUM_MA_METHOD БЫСТРАЯ_МЕТОД=MODE_SMMA;
input ENUM_APPLIED_PRICE БЫСТРАЯ_ТЦЕНЫ=PRICE_MEDIAN;

input int СДВИГ_ЦЕНЫ=300;
input int СВЕЧИ_СЛЕВА_ПИК=3;
input int СВЕЧИ_СПРАВА_ПИК=3;
input int ОХРАННЫЙ_ИНТЕРВАЛ=100;
input int ПРИБЫЛЬ=250;
input int УБЫТОК=250;

double StopLoss=0;
Трио *trio1,*trio2;
ТриоПик *trioPikL,*trioPikH;
ТриоПик *pikTrioL,*pikTrioH;

ТорговоеВремя *tradingTime;
Пик   *pikL;

Пик   *pikH;
Сделка *buy,*buy_stop,*buy_limit,
*sell,*sell_stop,*sell_limit;

ПорцияСделок *porciBuy,*porciSell,*porci;

datetime времяНовойСвечи=0;
int количество_тиков=0;
double TESTER_МОЩНОСТЬ;
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
double OnTester()
  {
   double чистая_прибыль=TesterStatistics(STAT_PROFIT);
   double максимальная_просадка=TesterStatistics(STAT_EQUITY_DD);

   if(чистая_прибыль<=0)
      return 0;
   if(максимальная_просадка!=0)
      TESTER_МОЩНОСТЬ=чистая_прибыль/максимальная_просадка;

   TESTER_МОЩНОСТЬ=MathRound(TESTER_МОЩНОСТЬ*100)/100;

   return TESTER_МОЩНОСТЬ;
  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
int OnInit()
  {
   if(МЕДЛЕННАЯ_ПЕРИОД<СРЕДНЯЯ_ПЕРИОД || МЕДЛЕННАЯ_ПЕРИОД<БЫСТРАЯ_ПЕРИОД || СРЕДНЯЯ_ПЕРИОД<БЫСТРАЯ_ПЕРИОД)
     {
      return INIT_SUCCEEDED;
     }

   trio1=new Трио(символ,PERIOD_CURRENT);
   trio1.БыстраяЗадать(БЫСТРАЯ_ПЕРИОД, БЫСТРАЯ_ГСДВИГ, БЫСТРАЯ_ВСДВИГ, БЫСТРАЯ_МЕТОД, БЫСТРАЯ_ТЦЕНЫ, clrRed);
   trio1.МедленнаяЗадать(МЕДЛЕННАЯ_ПЕРИОД, МЕДЛЕННАЯ_ГСДВИГ, МЕДЛЕННАЯ_ВСДВИГ, МЕДЛЕННАЯ_МЕТОД, МЕДЛЕННАЯ_ТЦЕНЫ, clrGreen);
   trio1.СредняяЗадать(СРЕДНЯЯ_ПЕРИОД, СРЕДНЯЯ_ГСДВИГ, СРЕДНЯЯ_ВСДВИГ, СРЕДНЯЯ_МЕТОД, СРЕДНЯЯ_ТЦЕНЫ, clrBlue);
   trioPikL = new ТриоПик();
   trioPikH = new ТриоПик();
   trio2=new Трио();
   trio2.БыстраяЗадать(БЫСТРАЯ_ПЕРИОД, БЫСТРАЯ_ГСДВИГ, БЫСТРАЯ_ВСДВИГ, БЫСТРАЯ_МЕТОД, БЫСТРАЯ_ТЦЕНЫ, clrRed);
   trio2.МедленнаяЗадать(МЕДЛЕННАЯ_ПЕРИОД, МЕДЛЕННАЯ_ГСДВИГ, МЕДЛЕННАЯ_ВСДВИГ, МЕДЛЕННАЯ_МЕТОД, МЕДЛЕННАЯ_ТЦЕНЫ, clrGreen);
   trio2.СредняяЗадать(СРЕДНЯЯ_ПЕРИОД, СРЕДНЯЯ_ГСДВИГ, СРЕДНЯЯ_ВСДВИГ, СРЕДНЯЯ_МЕТОД, СРЕДНЯЯ_ТЦЕНЫ, clrBlue);

   pikTrioL = new ТриоПик();
   pikTrioH = new ТриоПик();

   buy=new Сделка(OP_BUY,символ,ОБЪЕМ_СДЕЛКИ,ПРИБЫЛЬ,УБЫТОК,0,1,clrBlue);
   buy_limit= new Сделка(OP_BUYLIMIT,символ,ОБЪЕМ_СДЕЛКИ,ПРИБЫЛЬ, УБЫТОК, 0,2,clrBlueViolet);
   buy_stop = new Сделка(OP_BUYSTOP,символ,ОБЪЕМ_СДЕЛКИ,ПРИБЫЛЬ, УБЫТОК, 0,3,clrBlanchedAlmond);
   sell=new Сделка(OP_SELL,символ,ОБЪЕМ_СДЕЛКИ,ПРИБЫЛЬ,УБЫТОК,0,1,clrOrange);
   sell_limit= new Сделка(OP_SELLLIMIT,символ,ОБЪЕМ_СДЕЛКИ,ПРИБЫЛЬ, УБЫТОК, 0,2,clrRed);
   sell_stop = new Сделка(OP_SELLSTOP,символ,ОБЪЕМ_СДЕЛКИ,ПРИБЫЛЬ, УБЫТОК, 0,3,clrBrown);


   pikL=new Пик(СВЕЧИ_СПРАВА_ПИК,СВЕЧИ_СЛЕВА_ПИК,0,0,clrIvory,0);
   pikH=new Пик(СВЕЧИ_СПРАВА_ПИК,СВЕЧИ_СЛЕВА_ПИК,0,1,clrIvory,0);

   porciBuy=new ПорцияСделок(РАЗМЕР_ПОРЦИИ,РАЗМЕР_ДОБАВКИ1,РАЗМЕР_ДОБАВКИ2,РАЗМЕР_ДОБАВКИ3,РАЗМЕР_ДОБАВКИ4,РАЗМЕР_ДОБАВКИ5,РАЗМЕР_ДОБАВКИ6,РАЗМЕР_ДОБАВКИ7,РАЗМЕР_ДОБАВКИ8,РАЗМЕР_ДОБАВКИ9,РАЗМЕР_ДОБАВКИ10,РАЗМЕР_ДОБАВКИ11,РАЗМЕР_ДОБАВКИ12,РАЗМЕР_ДОБАВКИ13,РАЗМЕР_ДОБАВКИ14);
   porci=new ПорцияСделок(РАЗМЕР_ПОРЦИИ,РАЗМЕР_ДОБАВКИ1,РАЗМЕР_ДОБАВКИ2,РАЗМЕР_ДОБАВКИ3,РАЗМЕР_ДОБАВКИ4,РАЗМЕР_ДОБАВКИ5,РАЗМЕР_ДОБАВКИ6,РАЗМЕР_ДОБАВКИ7,РАЗМЕР_ДОБАВКИ8,РАЗМЕР_ДОБАВКИ9,РАЗМЕР_ДОБАВКИ10,РАЗМЕР_ДОБАВКИ11,РАЗМЕР_ДОБАВКИ12,РАЗМЕР_ДОБАВКИ13,РАЗМЕР_ДОБАВКИ14);

   porciSell=new ПорцияСделок(РАЗМЕР_ПОРЦИИ,РАЗМЕР_ДОБАВКИ1,РАЗМЕР_ДОБАВКИ2,РАЗМЕР_ДОБАВКИ3,РАЗМЕР_ДОБАВКИ4,РАЗМЕР_ДОБАВКИ5,РАЗМЕР_ДОБАВКИ6,РАЗМЕР_ДОБАВКИ7,РАЗМЕР_ДОБАВКИ8,РАЗМЕР_ДОБАВКИ9,РАЗМЕР_ДОБАВКИ10,РАЗМЕР_ДОБАВКИ11,РАЗМЕР_ДОБАВКИ12,РАЗМЕР_ДОБАВКИ13,РАЗМЕР_ДОБАВКИ14);

   return(INIT_SUCCEEDED);
  }
//+------------------------------------------------------------------+
//| Expert deinitialization function                                 |
//+------------------------------------------------------------------+

void OnDeinit(const int reason)
  {

  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
void OnTick()
  {

   if(НоваяСвеча(времяНовойСвечи,количество_тиков))
     {

      bool это_пикL=pikL.ОпределитьПик("L");
      bool это_пикH=pikH.ОпределитьПик("H");

      bool результатH1=trioPikH.ОпределитьСостояние(trio1,pikH);
      bool результатL1=trioPikL.ОпределитьСостояние(trio1,pikL);
      bool результатH2=pikTrioH.ОпределитьСостояние(pikH,trio2);
      bool результатL2=pikTrioL.ОпределитьСостояние(pikL,trio2);
      Comment(buy.ОбъемСделки(),"\n",sell.ОбъемСделки());
      if(СИГНАЛЫ_ОТКРЫТИЯ==трио_пики_обратнаяСО)
        {

         if(результатH2==1)
            if(!sell.СтатусСделки())
              {
               if(ПАРЦИАЛЬНОЕ_УПРАВЛЕНИЕ)
                 {
                  if(РАЗДЕЛЬНОЕ_УПРАВЛЕНИЕ)
                     sell.ВесСделки(porciSell.ВесВПорции());
                  else
                     sell.ВесСделки(porci.ВесВПорции());
                 }
               sell.ОткрытьСделку(0);
              }

         if(результатL2==1)
            if(!buy.СтатусСделки())
              {
               if(ПАРЦИАЛЬНОЕ_УПРАВЛЕНИЕ)
                 {
                  if(РАЗДЕЛЬНОЕ_УПРАВЛЕНИЕ)
                     buy.ВесСделки(porciBuy.ВесВПорции());
                  else
                     buy.ВесСделки(porci.ВесВПорции());
                 }
               buy.ОткрытьСделку(0);
              }
        }
      if(СИГНАЛЫ_ОТКРЫТИЯ==трио_пикиСО)
        {

         if(результатH1==1)
           {
            if(ПАРЦИАЛЬНОЕ_УПРАВЛЕНИЕ)
              {
               if(РАЗДЕЛЬНОЕ_УПРАВЛЕНИЕ)
                  buy_stop.ВесСделки(porciBuy.ВесВПорции());
               else
                  buy_stop.ВесСделки(porci.ВесВПорции());
              }
            if(!buy_stop.СтатусСделки())
               buy_stop.ОткрытьСделку(pikH.ПолучитьЦену()+СДВИГ_ЦЕНЫ*Point);
            if(buy_stop.СтатусСделки()==отложена)
              {
               buy_stop.ИзменитьЦену(pikH.ПолучитьЦену()+СДВИГ_ЦЕНЫ*Point);
              }

           }

         if(результатL1==1)
           {
           if(ПАРЦИАЛЬНОЕ_УПРАВЛЕНИЕ)
                 {
                  if(РАЗДЕЛЬНОЕ_УПРАВЛЕНИЕ)
                     sell_stop.ВесСделки(porciSell.ВесВПорции());
                  else
                     sell_stop.ВесСделки(porci.ВесВПорции());
                 }
            if(!sell_stop.СтатусСделки())
               sell_stop.ОткрытьСделку(pikL.ПолучитьЦену()-СДВИГ_ЦЕНЫ*Point);
            if(sell_stop.СтатусСделки()==отложена)
              {
               sell_stop.ИзменитьЦену(pikL.ПолучитьЦену()-СДВИГ_ЦЕНЫ*Point);
              }
           }

         if(trioPikH.состояние_пика==-1 && buy_stop.СтатусСделки()==отложена)
           {
            buy_stop.ЗакрытьСделку();
           }
         if(trioPikL.состояние_пика==-1 && sell_stop.СтатусСделки()==отложена)
           {
            sell_stop.ЗакрытьСделку();
           }
        }
      pikH.УдалитьПик();
      pikL.УдалитьПик();


     }
   sell_stop.ПроверитьСтатусСделки();
   buy_stop.ПроверитьСтатусСделки();
   sell.ПроверитьСтатусСделки();
   buy.ПроверитьСтатусСделки();

   if(buy_stop.СтатусСделки()==открыта)
     {
      buy=new Сделка(buy_stop.ТикетСделки() && СИГНАЛЫ_ОТКРЫТИЯ==трио_пикиСО);
      buy_stop.ОбнулитьСделку();
      trioPikH.ОбнулитьСостояния();
     }

   if(sell_stop.СтатусСделки()==открыта && СИГНАЛЫ_ОТКРЫТИЯ==трио_пикиСО)
     {
      sell=new Сделка(sell_stop.ТикетСделки());
      sell_stop.ОбнулитьСделку();
      trioPikL.ОбнулитьСостояния();
     }

//если открыта - на каждом пересечении новая сделка -- но нужна комната сделок
   if(buy.СтатусСделки()==закрыта)
     {
      if(ПАРЦИАЛЬНОЕ_УПРАВЛЕНИЕ)
        {
         if(РАЗДЕЛЬНОЕ_УПРАВЛЕНИЕ)
            porciBuy.ДобавитьСделку(buy);
         else
            porci.ДобавитьСделку(buy);
        }
      buy.ОбнулитьСделку();
      if(СИГНАЛЫ_ОТКРЫТИЯ==трио_пики_обратнаяСО)
        {
         trioPikL.ОбнулитьСостояния();
        }
     }
   if(sell.СтатусСделки()==закрыта)
     {
      if(ПАРЦИАЛЬНОЕ_УПРАВЛЕНИЕ)
        {
         if(РАЗДЕЛЬНОЕ_УПРАВЛЕНИЕ)
            porciBuy.ДобавитьСделку(sell);
         else
            porci.ДобавитьСделку(sell);
         buy.ОбнулитьСделку();
        }
      sell.ОбнулитьСделку();
      if(СИГНАЛЫ_ОТКРЫТИЯ==трио_пики_обратнаяСО)
        {
         trioPikH.ОбнулитьСостояния();
        }

     }

  }
//+------------------------------------------------------------------+
