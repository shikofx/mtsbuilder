//+------------------------------------------------------------------+
//|                                           ПараметрыСоветника.mqh |
//|                                                   Пархейчук Д.А. |
//|                                                                  |
//+------------------------------------------------------------------+
#property copyright "Пархейчук Д.А."
#property link      ""
#property version   "1.00"
#property strict
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
#include  "..\ПАиПР\Время\ТорговоеВремя.mqh"
#include  "..\ПАиПР\СвечнойАнализ\Свеча.mqh"
#include  "..\ПАиПР\СвечнойАнализ\Зебра.mqh"
#include  "..\Библиотеки\Перечисления.mqh"
#include  "ПараметрыСоветника.mqh"
#include  "РезультатыТестирования.mqh"
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
class Аналитик
  {
private:
   string            имя_файла;
   ПараметрыСоветника *box_parameters[];
   РезультатыТестирования *test_results[];
   ПараметрыСоветника *parameters;
   РезультатыТестирования *result;
   bool              параметры_совпали;
   int               число_элементов;
   void              ВФайл();

   // параметры советника, подлежащие тестированию
public:
                     Аналитик(РезультатыТестирования *_results,ПараметрыСоветника *_paramerers);
                    ~Аналитик();
   bool              Добавить();
   bool              НайтиПараметры();
   void              УстановитьПараметры(ПараметрыСоветника *_paramerers) {parameters=_paramerers;}
   void              УстановитьРезультаты(РезультатыТестирования *_result) {result=_result;}
  };
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
Аналитик::Аналитик(РезультатыТестирования *_results,ПараметрыСоветника *_paramerers)
  {
   параметры_совпали=false;
   имя_файла="Аналитик_"+EnumToString(_paramerers.тип_торговли)+"_"+EnumToString(_paramerers.сигналы_открытия)+"_"+Symbol()+"_"+EnumToString(_paramerers.таймфрейм_аналитики)+".csv";
//parameters = new ПараметрыСоветника();
   parameters=_paramerers;
//result = new РезультатыТестирования();
   result=_results;
   int fileHandle=FileOpen(имя_файла,FILE_READ|FILE_CSV);
   число_элементов=0;
   if(fileHandle>=0)
     {
      FileSeek(fileHandle,0,SEEK_SET);

      while(!FileIsEnding(fileHandle))
        {
         string strResult=FileReadString(fileHandle);
         string strParameters=FileReadString(fileHandle);
         Print("strResult = ",strResult);
         Print("strParameters = ",strParameters);
         if(StringLen(strResult)>2)
           {
            число_элементов++;
            ArrayResize(test_results,число_элементов);
            ArrayResize(box_parameters,число_элементов);
            Print("parameters = ", parameters.ВСтроку());
            if(strParameters==parameters.ВСтроку() && !параметры_совпали)
               параметры_совпали=true;
            
            test_results[число_элементов-1]=new РезультатыТестирования();
            box_parameters[число_элементов-1]=new ПараметрыСоветника();
            Print("параметры_совпали=", параметры_совпали);
            Print("0test_results[,",число_элементов-1,"] = ", test_results[число_элементов-1].ВСтроку());
            Print("0box_parameters[,",число_элементов-1, "] = ", box_parameters[число_элементов-1].ВСтроку());
            test_results[число_элементов-1].ИзСтроки(strResult);
            box_parameters[число_элементов-1].ИзСтроки(strParameters);
            Print("1test_results[,",число_элементов-1,"] = ", test_results[число_элементов-1].ВСтроку());
            Print("1box_parameters[,",число_элементов-1, "] = ", box_parameters[число_элементов-1].ВСтроку());
           }
        }
     }
   else
     {
      fileHandle=FileOpen(имя_файла,FILE_WRITE|FILE_CSV);
     }
   FileClose(fileHandle);
   bool ps=параметры_совпали;

  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
Аналитик::~Аналитик()
  {
   //this.ВФайл();
  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
bool Аналитик::Добавить()
  {
   if(число_элементов>=0 && параметры_совпали)
      return false;

   число_элементов++;
   ArrayResize(test_results,число_элементов);
   ArrayResize(box_parameters,число_элементов);
   test_results[число_элементов-1]=result;
   box_parameters[число_элементов-1]=parameters;
   this.ВФайл();
   return true;
  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
void Аналитик::ВФайл()
  {
   string строка = "";
   int fileHandle=FileOpen(имя_файла,FILE_WRITE|FILE_CSV);
   for(int i=0;i<число_элементов;i++)
     {
      строка=test_results[i].ВСтроку()+";"+box_parameters[i].ВСтроку();
      FileWrite(fileHandle,строка);
     }
   FileClose(fileHandle);

  }
//+------------------------------------------------------------------+
bool              Аналитик::НайтиПараметры()
  {
   bool ps=параметры_совпали;
   return параметры_совпали;
  }
//+------------------------------------------------------------------+
