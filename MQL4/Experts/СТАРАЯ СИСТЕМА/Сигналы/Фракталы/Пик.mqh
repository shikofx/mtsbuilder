//+------------------------------------------------------------------+
//|                                                          Pic.mqh |
//|                                »нвестиционна€ группа ¬ит€зи ƒуха |
//|                                                                  |
//+------------------------------------------------------------------+
#property copyright "»нвестиционна€ группа ¬ит€зи ƒуха"
#property link      ""
#property version   "1.00"
#property strict
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
class ѕик
  {
private:
   string            им€;
   int               свечи_справа;
   int               свечи_слева;
   int               сдвиг;
   bool              направление; //0 - пики снизу, 1 - пики сверху
   color             цвет;
   int               вертикальное—мещение;

public:
   double            цена;
   datetime          врем€;
   void              »зменить»м€(string _им€) {им€=IntegerToString(направление)+"___"+_им€+"___"+TimeToString(врем€);}
   string            ѕоказать»м€(){return(им€);}

   void              »зменить÷ену(double _цена) {цена=_цена;}
   void              »зменить÷ену();
   double            ѕоказать÷ену(){return(цена);}

   void              »зменить¬рем€(datetime _врем€){врем€=_врем€;}
   void              »зменить¬рем€(){врем€=Time[свечи_справа+сдвиг+1];}
   datetime          ѕоказать¬рем€(){return(врем€);}

   void              »зменить—вечи—права(int _свечи_справа){свечи_справа=_свечи_справа;}
   int               ѕоказать—вечи—права(){return(свечи_справа);}
   void              »зменить—вечи—лева(int _свечи_слева){свечи_слева=_свечи_слева;}
   int               ѕоказать—вечи—лева(){return(свечи_слева);}
   void              »зменитьЌаправление(bool _направление){направление=_направление;}
   bool              ѕоказатьЌаправление(){return(направление);}
   void              »зменить÷вет—трелки(color _цвет){цвет=_цвет;}
   color             ѕоказать÷вет—трелки(){return(цвет);}
   void              »зменить—двиг(int _сдвиг){сдвиг=_сдвиг;}
   int               ѕоказать—двиг(){return(сдвиг);}
   
   void              ѕоставить—трелку();
   void              ”далить—трелку();
   void              ”далитьѕик();
   bool              ќпределитьѕик(string _им€);
   string            ѕик¬—троку();
   bool              —уществует();
   //void              operator=(ѕик &_пик);
                     ѕик();
                     ѕик(int _свечи_справа,int _свечи_слева,int сдвиг,bool _направление,color _цвет, int _вертикальное—мещение);
                    ~ѕик();
  };
//+------------------------------------------------------------------+
//|  онструктор класса ѕик                                                                 |
//+------------------------------------------------------------------+
ѕик::ѕик()
  {
  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
ѕик::ѕик(int _свечи_справа,int _свечи_слева,int _сдвиг,bool _направление,color _цвет, int _вертикальное—мещение)
  {
   им€="";
   цена=0.0;
   врем€=0;
   свечи_слева=_свечи_слева;
   свечи_справа=_свечи_справа;
   сдвиг=_сдвиг;
   направление=_направление;
   цвет=_цвет;
   вертикальное—мещение = _вертикальное—мещение;
  }
ѕик::~ѕик()
  {
   им€="";
   цена=0.0;
   врем€=0;
  }
//+------------------------------------------------------------------+
//| ќпредел€ет существует ли пик                                                                  |
//+------------------------------------------------------------------+
bool ѕик::—уществует()
  {
   if(цена!=0)
      return(true);
   else
      return(false);
  }
//+------------------------------------------------------------------+
//| ”станавливает стрелку дл€ пика                                                                 |
//+------------------------------------------------------------------+
void ѕик::»зменить÷ену()
  {
   if(!направление)
      цена=Low[свечи_справа+сдвиг+1];
   if(направление)
      цена=High[свечи_справа+сдвиг+1];
  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
void ѕик::ѕоставить—трелку()
  {
   if(!направление)
     {
      ObjectCreate(0,им€,OBJ_ARROW_UP,0,врем€,цена-(вертикальное—мещение*50+30)*Point);
      ObjectSet(им€,OBJPROP_COLOR,цвет);
      ObjectSet(им€,OBJPROP_ARROWCODE,217);
      ObjectSet(им€,OBJPROP_WIDTH,2);
      ObjectSet(им€,OBJPROP_ANCHOR,ANCHOR_TOP);
     }
   if(направление)
     {
      ObjectCreate(0,им€,OBJ_ARROW_DOWN,0,врем€,цена+(вертикальное—мещение*50+60)*Point);
      ObjectSet(им€,OBJPROP_ARROWCODE,218);
      ObjectSet(им€,OBJPROP_COLOR,цвет);
      ObjectSet(им€,OBJPROP_WIDTH,2);
      ObjectSet(им€,OBJPROP_ANCHOR,ANCHOR_BOTTOM);
     }
  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
void ѕик::”далитьѕик()
  {
//this.”далить—трелку();
   this.им€="";
   this.цена=0.0;
   this.врем€=0;
  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
void ѕик::”далить—трелку()
  {
   ObjectDelete(им€);
  }
//+------------------------------------------------------------------+
//| ќпредел€ет, €вл€етс€ ли свеча пиком                                                                 |
//+------------------------------------------------------------------+
bool ѕик::ќпределитьѕик(string _им€)
  {
   bool это_пик=true;
   double _цена=0;

   if(!направление)
      _цена=Low[свечи_справа+сдвиг+1];
   if(направление)
      _цена=High[свечи_справа+сдвиг+1];

   for(int i=сдвиг+1; i<=(свечи_слева+свечи_справа+сдвиг+1); i++)
     {
      if(i==свечи_справа+сдвиг+1)
         continue;
      if((_цена >= Low[i] && !направление) ||
         (_цена <= High[i] && направление))
        {
         это_пик=false;
         break;
        }
     }
   if(это_пик)
     {
      цена = _цена;
      врем€=Time[свечи_справа+сдвиг+1];
      им€=IntegerToString(направление)+_им€+TimeToString(врем€);
     }
   this.ѕоставить—трелку();
   return это_пик;
  }
//+------------------------------------------------------------------+
//| ‘ормирует строку дл€ вывода на экран или в журнал                |
//+------------------------------------------------------------------+
string ѕик::ѕик¬—троку()
  {
   return(TimeToString(врем€)+"_______"+DoubleToString(цена));
  }
//+------------------------------------------------------------------+

