//+------------------------------------------------------------------+
//|                                                ќфис‘ракталов.mqh |
//|                                »нвестиционна€ группа ¬ит€зи ƒуха |
//|                                                                  |
//+------------------------------------------------------------------+
#property copyright "»нвестиционна€ группа ¬ит€зи ƒуха"
#property link      ""
#property version   "1.00"
#property strict
#include " омната‘ракталов.mqh"
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
class ќфис‘ракталов
  {
private:
    омната‘ракталов *Office[];
   int               количество омнат;
   bool              направление; //1 - верхние пики (максимумы), 0 - нижние пики (минимумы)
   void              ”далить омнату(int комната);
public:
    омната‘ракталов *ќткрыть омнату(int _тип,ѕик &_пик); //создание новой комнаты в офисе
    омната‘ракталов *ƒобавить¬ омнаты(int _тип,ѕик &_пик); //добавление фрактала в комнаты
   void              ”далить«акрытые омнаты();
   void              ”далить—межные омнаты(int _тип);
   string            ќфис‘ракталов¬—троку();
                     ќфис‘ракталов();
                    ~ќфис‘ракталов();
  };
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
ќфис‘ракталов::ќфис‘ракталов()
  {
   количество омнат=0;
  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
ќфис‘ракталов::~ќфис‘ракталов()
  {
  }
//+------------------------------------------------------------------+
//+------------------------------------------------------------------+
//| —оздаем новую комнату в офисе (новый элемент массива)            |
//+------------------------------------------------------------------+
 омната‘ракталов *ќфис‘ракталов::ќткрыть омнату(int _тип,ѕик &_пик)
  {
   if(_тип==1)
     {
      if(ArraySize(Office)<=0)
         направление=_пик.ѕоказатьЌаправление();

      if(количество омнат>0)
         for(int номер омнаты=0; номер омнаты<количество омнат; номер омнаты++)
           {
            if(Office[номер омнаты].≈сть‘рактал—“ипом(1) && 
               !Office[номер омнаты].≈сть‘рактал—“ипом(2))
              {
               ‘рактал fractal = new ‘рактал(Office[номер омнаты].ƒостать‘рактал(1,1));
               if((!направление && fractal.цена<_пик.цена)||
                  (направление && fractal.цена>_пик.цена))
                 {
                  ”далить омнату(номер омнаты);//удалить комнату и создать новую
                 }
              }
           }

      количество омнат++;
      ArrayResize(Office,количество омнат);
      Office[количество омнат-1]=new  омната‘ракталов();
      Office[количество омнат-1].ƒобавить‘рактал(_тип,_пик);

     }
   return(Office[количество омнат-1]);
  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
 омната‘ракталов *ќфис‘ракталов::ƒобавить¬ омнаты(int _тип,ѕик &_пик)
  {
   bool статус=false;
    омната‘ракталов *комната=new  омната‘ракталов();
   if(количество омнат>0)
      for(int номер омнаты=количество омнат-1; номер омнаты>=0; номер омнаты--)
        {
         if(_тип==2 && Office[номер омнаты].≈сть‘рактал—“ипом(1))
           {
            ‘рактал fractal1=new ‘рактал(Office[номер омнаты].ƒостать‘рактал(1,1));
            if(fractal1.врем€<_пик.врем€ && 
               ((fractal1.цена>_пик.цена && !направление) || 
               (fractal1.цена<_пик.цена && направление))) //***********
              {
               if(!Office[номер омнаты].≈сть‘рактал—“ипом(2))
                 {
                  Office[номер омнаты].ƒобавить‘рактал(_тип,_пик);
                  комната=Office[номер омнаты];
                 }

               else
                 {
                  ‘рактал fractal2=new ‘рактал(Office[номер омнаты].ƒостать‘рактал(2,1));
                  if(fractal2.врем€<_пик.врем€ && 
                   ((fractal2.цена>_пик.цена && !направление) || 
                     (fractal2.цена<_пик.цена && направление)))//********************
                    {
                     ”далить омнату(номер омнаты);
                    }
                 }
              }
           }
         if(_тип==3 && Office[номер омнаты].≈сть‘рактал—“ипом(2) && !Office[номер омнаты].≈сть‘рактал—“ипом(3))
           {
            ‘рактал fractal21=new ‘рактал(Office[номер омнаты].ƒостать‘рактал(2,1));
            if(fractal21.врем€<_пик.врем€ && 
               ((fractal21.цена<_пик.цена && !направление) || 
               (fractal21.цена>_пик.цена && направление)))
              {
               Office[номер омнаты].ƒобавить‘рактал(_тип,_пик);
               комната=Office[номер омнаты];
              }

           }
        }

   return(комната);
  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
void ќфис‘ракталов::”далить омнату(int комната)
  {
   for(int i=комната; i<ArraySize(Office)-1; i++)
      Office[i]=Office[i+1];
   количество омнат--;
   ArrayResize(Office,количество омнат);
  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
string ќфис‘ракталов::ќфис‘ракталов¬—троку()
  {
   string строка="";
   for(int номер омнаты=0; номер омнаты<количество омнат; номер омнаты++)
      строка=строка+IntegerToString(номер омнаты)+"\n"+Office[номер омнаты]. омата‘ракталов¬—троку()+"\n";
   return(строка);
  }
//+------------------------------------------------------------------+

void ќфис‘ракталов::”далить«акрытые омнаты()
  {
   for(int номер омнаты=количество омнат-1; номер омнаты>=0; номер омнаты--)
     {
      if(Office[номер омнаты].≈сть‘рактал—“ипом(3))
        {
         ”далить омнату(номер омнаты);
        }

     }
  }
//+------------------------------------------------------------------+
//+------------------------------------------------------------------+
//| ”далить комнаты у которых одинаковый второй пик                                                                  |
//+------------------------------------------------------------------+

void ќфис‘ракталов::”далить—межные омнаты(int _тип)
  {
   int номер—равниваемой омнаты=количество омнат-1;
  // Print("Ќачало проверки");
   while((номер—равниваемой омнаты)>=1)
      if(Office[номер—равниваемой омнаты].≈сть‘рактал—“ипом(_тип))
        {
    //    Print("Ќомер найденой сравниваемой комнаты", номер—равниваемой омнаты);
         for(int номер омнаты=номер—равниваемой омнаты-1; номер омнаты>=0; номер омнаты--)
           {
      //      Print("номер комнаты - ", номер омнаты);
            if(Office[номер омнаты].≈сть‘рактал—“ипом(_тип))
              {
               ‘рактал fractalA = new ‘рактал(Office[номер омнаты].ƒостать‘рактал(_тип,1));
               ‘рактал fractalB = new ‘рактал(Office[номер—равниваемой омнаты].ƒостать‘рактал(_тип,1));
        //       Print("в комнате є", номер омнаты, " есть пик с типом ", _тип);
               if(fractalA.врем€==fractalB.врем€ && fractalA.цена==fractalB.цена)
                 {
          //        Print(" омнаты смежные. ”дал€ем комнату є", номер омнаты);
                  this.”далить омнату(номер омнаты);
                  номер—равниваемой омнаты--;
                 }
              }
            else
            {
        //       Print("¬ комнате є", номер омнаты, " нет пика с типом є", _тип );
               continue;
               }
           }
         номер—равниваемой омнаты--;
        }
   else
     {
      номер—равниваемой омнаты--;
      //Print("—равниваем следующую комнату ", номер—равниваемой омнаты);
      continue;
     }
  }
//+------------------------------------------------------------------+
