//+------------------------------------------------------------------+
//|                                                       ТСТЕСТ.mq4 |
//|                                                Пархейчук Дмитрий |
//|                                                                  |
//+------------------------------------------------------------------+
#property copyright "Пархейчук Дмитрий"
#property link      ""
#property version   "1.00"
#property strict

#include  "Подключение.mqh"



input ENUM_ТИП_ТОРГОВЛИ ТИП_ТОРГОВЛИ=бинары;
input ENUM_СИГНАЛЫ_ОТКРЫТИЯ СИГНАЛЫ_ОТКРЫТИЯ=зебра;
input ENUM_ТЕСТОВЫЙ_ПАРАМЕТР ТЕСТ_ПАРАМЕТР=мощность;
input ENUM_TIMEFRAMES ТАЙМФРЕЙМ_АНАЛИТИКИ=PERIOD_D1;
input ENUM_ВРЕМЯ_ЖИЗНИ ВРЕМЯ_ЖИЗНИ=5; //Время жизни сделки (мин.)
input int НАЧАЛО_РАБОТЫ_ЧАС=8;
input int НАЧАЛО_РАБОТЫ_МИН=30;
input int КОНЕЦ_РАБОТЫ_ЧАС=19;
input int КОНЕЦ_РАБОТЫ_МИН=0;
input int ЗАДЕРЖКА_ОТКРЫТИЯ_ЧАС = 0;
input int ЗАДЕРЖКА_ОТКРЫТИЯ_МИН = 0;

input int     ЗЕБРА_ЧИСЛО_ПОЛОС=4;
input bool МАССОВКА=false;

input double ПРОЦЕНТ_ДИВИДЕНДОВ=80;

input double  ОБЪЕМ_СДЕЛКИ=0.01;
/*input */ENUM_СИМВОЛЫ     символ=NULL;

input bool       ПАРЦИАЛЬНОЕ_УПРАВЛЕНИЕ=false;
input bool       РАЗДЕЛЬНОЕ_УПРАВЛЕНИЕ = false;
input ENUM_ЧИСЛО_СТУПЕНЕЙ ЧИСЛО_СТУПЕНЕЙ=3;
input double ВЫСОТА_СТУПЕНИ1 = 2;
input double ВЫСОТА_СТУПЕНИ2 = 2;
input double ВЫСОТА_СТУПЕНИ3 = 2;
input double ВЫСОТА_СТУПЕНИ4 = 2;
input double ВЫСОТА_СТУПЕНИ5 = 2;
input double ВЫСОТА_СТУПЕНИ6 = 2;
input double ВЫСОТА_СТУПЕНИ7 = 2;
input double ВЫСОТА_СТУПЕНИ8 = 2;
input double ВЫСОТА_СТУПЕНИ9 = 2;
input double ВЫСОТА_СТУПЕНИ10 = 2;
input double ВЫСОТА_СТУПЕНИ11 = 2;
input double ВЫСОТА_СТУПЕНИ12 = 2;
input double ВЫСОТА_СТУПЕНИ13 = 2;
input double ВЫСОТА_СТУПЕНИ14 = 2;

input int ПРИБЫЛЬ=250;
input int УБЫТОК=250;

Аналитик *analitik;
ПараметрыСоветника *parameters;
РезультатыТестирования *result;

double высота_ступени[14];
Свеча          *svecha;
Зебра          *zebra;
Сделка         *buy,*buy_stop,*buy_limit,
*sell,*sell_stop,*sell_limit;
ТорговоеВремя  *tradingTime;
ПорцияСделок   *porciBuy,*porciSell,*porci;
datetime       времяНовойСвечи=0;
int            количество_тиков=0;
double         TESTER_PARAMETER;
ТестерБинаров *testerBinary;
ТорговоеВремя *timeToTrade;
ТорговоеВремя *timeToOpen;

string файлРезультатов="";
int новыйДень=0;
int количество_тиков_дня=0;

int количество_тиков_свечи=0;

datetime времяНачалаРаботы,времяКонцаРаботы;
bool записалРезультаты=false;
string comment="";
short сигнал=0;
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
double OnTester()
  {

   if(ТИП_ТОРГОВЛИ==розница)
     {
      result.чистая_прибыль=TesterStatistics(STAT_PROFIT);
      result.максимальная_просадка=TesterStatistics(STAT_EQUITY_DD);
      result.количество_прибылей= StrToInteger(DoubleToString(TesterStatistics(STAT_PROFIT_TRADES)));
      result.количество_убытков = StrToInteger(DoubleToString(TesterStatistics(STAT_LOSS_TRADES)));
      result.общая_прибыль=TesterStatistics(STAT_GROSS_PROFIT);
      result.общий_убыток=TesterStatistics(STAT_GROSS_LOSS);
     }
   if(ТИП_ТОРГОВЛИ==бинары)
     {
      testerBinary=new ТестерБинаров(parameters, result);
      testerBinary.ЧистаяПрибыль();
      testerBinary.ВФайл();
     }

   result.максимальное_количество_убытков=StrToInteger(DoubleToString(TesterStatistics(STAT_CONLOSSMAX_TRADES)));

   if((result.чистая_прибыль==0 && result.максимальная_просадка==0) || OrdersHistoryTotal()<=1)
      result.мощность=0;
   if(result.максимальная_просадка!=0)
     {
      result.мощность=result.чистая_прибыль/result.максимальная_просадка;
      result.мощность=MathRound(result.мощность*100)/100;
     }
   if(result.чистая_прибыль!=0 && result.максимальная_просадка==0 && OrdersHistoryTotal()>1)
      result.мощность=15;

   switch(ТЕСТ_ПАРАМЕТР)
     {
      case мощность:
         TESTER_PARAMETER=-result.мощность;
         break;
      case количество_убытков:
         TESTER_PARAMETER=-result.максимальное_количество_убытков;
         break;
     }
   analitik.УстановитьРезультаты(result);
   analitik.Добавить();
   return (TESTER_PARAMETER);
  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
void OnDeinit(const int reason)
  {

  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
int OnInit()
  {
//Проверка тестовых параметров. 
//Если в файле с результатами тестирования найдутся такие же параметры,
//то анализ проводится не будет при включенном режиме ИСКЛЮЧИТЬ_ПОВТОР_ПАРАМЕТРОВ
   parameters=new ПараметрыСоветника();
   parameters.тип_торговли = ТИП_ТОРГОВЛИ;
   parameters.время_жизни=ВРЕМЯ_ЖИЗНИ;
   parameters.задержка_открытия_мин = ЗАДЕРЖКА_ОТКРЫТИЯ_МИН;
   parameters.задержка_открытия_час = ЗАДЕРЖКА_ОТКРЫТИЯ_ЧАС;
   parameters.зебра_число_полос= ЗЕБРА_ЧИСЛО_ПОЛОС;
   parameters.конец_работы_мин = КОНЕЦ_РАБОТЫ_МИН;
   parameters.конец_работы_час = КОНЕЦ_РАБОТЫ_ЧАС;
   parameters.массовка=МАССОВКА;
   parameters.начало_работы_мин = НАЧАЛО_РАБОТЫ_МИН;
   parameters.начало_работы_час = НАЧАЛО_РАБОТЫ_ЧАС;
   parameters.объем_сделки=ОБЪЕМ_СДЕЛКИ;
   parameters.парциальное_управление=ПАРЦИАЛЬНОЕ_УПРАВЛЕНИЕ;
   parameters.прибыль=ПРИБЫЛЬ;
   parameters.процент_дивидендов=ПРОЦЕНТ_ДИВИДЕНДОВ;
   parameters.раздельное_управление=РАЗДЕЛЬНОЕ_УПРАВЛЕНИЕ;
   parameters.высота_ступени[0] = ВЫСОТА_СТУПЕНИ1;
   parameters.высота_ступени[1] = ВЫСОТА_СТУПЕНИ2;
   parameters.высота_ступени[2] = ВЫСОТА_СТУПЕНИ3;
   parameters.высота_ступени[3] = ВЫСОТА_СТУПЕНИ4;
   parameters.высота_ступени[4] = ВЫСОТА_СТУПЕНИ5;
   parameters.высота_ступени[5] = ВЫСОТА_СТУПЕНИ6;
   parameters.высота_ступени[6] = ВЫСОТА_СТУПЕНИ7;
   parameters.высота_ступени[7] = ВЫСОТА_СТУПЕНИ8;
   parameters.высота_ступени[8] = ВЫСОТА_СТУПЕНИ9;
   parameters.высота_ступени[9] = ВЫСОТА_СТУПЕНИ10;
   parameters.высота_ступени[10] = ВЫСОТА_СТУПЕНИ11;
   parameters.высота_ступени[11] = ВЫСОТА_СТУПЕНИ12;
   parameters.высота_ступени[12] = ВЫСОТА_СТУПЕНИ13;
   parameters.высота_ступени[13] = ВЫСОТА_СТУПЕНИ14;
   parameters.число_ступеней=ЧИСЛО_СТУПЕНЕЙ;
   parameters.сигналы_открытия=СИГНАЛЫ_ОТКРЫТИЯ;
   parameters.таймфрейм_аналитики=ТАЙМФРЕЙМ_АНАЛИТИКИ;
   parameters.убыток=УБЫТОК;
   result=new РезультатыТестирования();
   analitik=new Аналитик(result,parameters);
   if(analitik.НайтиПараметры())
     {
    //  return(INIT_AGENT_NOT_SUITABLE);
     }
   if(НАЧАЛО_РАБОТЫ_ЧАС>КОНЕЦ_РАБОТЫ_ЧАС || (НАЧАЛО_РАБОТЫ_ЧАС==КОНЕЦ_РАБОТЫ_ЧАС && НАЧАЛО_РАБОТЫ_МИН>КОНЕЦ_РАБОТЫ_МИН))
      SetUserError(ERR_INVALID_TRADE_PARAMETERS);

   zebra = new Зебра(ЗЕБРА_ЧИСЛО_ПОЛОС, ТАЙМФРЕЙМ_АНАЛИТИКИ);
   svecha=new Свеча(ТАЙМФРЕЙМ_АНАЛИТИКИ, 1);
   buy=new Сделка(OP_BUY,символ,ОБЪЕМ_СДЕЛКИ,ПРИБЫЛЬ,УБЫТОК,ВРЕМЯ_ЖИЗНИ,1,clrBlue);
   buy_limit= new Сделка(OP_BUYLIMIT,символ,ОБЪЕМ_СДЕЛКИ,ПРИБЫЛЬ, УБЫТОК, 0,2,clrBlueViolet);
   buy_stop = new Сделка(OP_BUYSTOP,символ,ОБЪЕМ_СДЕЛКИ,ПРИБЫЛЬ, УБЫТОК, 0,3,clrBlanchedAlmond);
   sell=new Сделка(OP_SELL,символ,ОБЪЕМ_СДЕЛКИ,ПРИБЫЛЬ,УБЫТОК,ВРЕМЯ_ЖИЗНИ,1,clrOrange);
   sell_limit= new Сделка(OP_SELLLIMIT,символ,ОБЪЕМ_СДЕЛКИ,ПРИБЫЛЬ, УБЫТОК, 0,2,clrRed);
   sell_stop = new Сделка(OP_SELLSTOP,символ,ОБЪЕМ_СДЕЛКИ,ПРИБЫЛЬ, УБЫТОК, 0,3,clrBrown);
   porciBuy=new ПорцияСделок(ЧИСЛО_СТУПЕНЕЙ,высота_ступени);
   porciSell=new ПорцияСделок(ЧИСЛО_СТУПЕНЕЙ,высота_ступени);
   porci=new ПорцияСделок(ЧИСЛО_СТУПЕНЕЙ,высота_ступени);
   timeToTrade=new ТорговоеВремя(НАЧАЛО_РАБОТЫ_ЧАС,НАЧАЛО_РАБОТЫ_МИН,КОНЕЦ_РАБОТЫ_ЧАС,КОНЕЦ_РАБОТЫ_МИН);
   timeToOpen = new ТорговоеВремя(ЗАДЕРЖКА_ОТКРЫТИЯ_ЧАС, ЗАДЕРЖКА_ОТКРЫТИЯ_МИН);

   return(INIT_SUCCEEDED);
  }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
void OnTick()
  {

   if(ВРЕМЯ_ЖИЗНИ>0)
     {
      buy.ПроверитьВремяЖизни();
      sell.ПроверитьВремяЖизни();
     }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
   if(buy.СтатусСделки()==закрыта)
     {
      if(ПАРЦИАЛЬНОЕ_УПРАВЛЕНИЕ)
        {
         if(РАЗДЕЛЬНОЕ_УПРАВЛЕНИЕ)
            porciBuy.ДобавитьСделку(buy);
         else
            porci.ДобавитьСделку(buy);
        }
      buy.ОбнулитьСделку();
     }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
   if(sell.СтатусСделки()==закрыта)
     {

      if(ПАРЦИАЛЬНОЕ_УПРАВЛЕНИЕ)
        {
         if(РАЗДЕЛЬНОЕ_УПРАВЛЕНИЕ)
            porciSell.ДобавитьСделку(sell);
         else
            porci.ДобавитьСделку(sell);
        }
      sell.ОбнулитьСделку();

     }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
   if(НовыйДень(новыйДень,количество_тиков_дня))
     {
      timeToTrade.ОбновитьВремя();
     }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
   bool новая_свеча=false;
   if(МАССОВКА)
      новая_свеча=НоваяСвеча(PERIOD_CURRENT,времяНовойСвечи,количество_тиков);
   else
      новая_свеча=НоваяСвеча(ТАЙМФРЕЙМ_АНАЛИТИКИ,времяНовойСвечи,количество_тиков);
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
   if(новая_свеча && timeToTrade.внутриИнтервала())
     {
      timeToOpen.ОбновитьВремяОткрытия();
      сигнал=0;
      switch(СИГНАЛЫ_ОТКРЫТИЯ)
        {
         case свеча:
            сигнал=svecha.Фильтр();
            break;
         case зебра:
            сигнал=zebra.Фильтр();
            break;
        }
     }
//+------------------------------------------------------------------+
//|                                                                  |
//+------------------------------------------------------------------+
   if(timeToOpen.ВремяОткрытияСделки())
     {
      if(сигнал==1 && buy.КоличествоСделок()==0)
        {
         //покупка
         if(ПАРЦИАЛЬНОЕ_УПРАВЛЕНИЕ)
           {
            if(РАЗДЕЛЬНОЕ_УПРАВЛЕНИЕ)
               buy.ВесСделки(porciBuy.ВесВПорции());
            else
               buy.ВесСделки(porci.ВесВПорции());
           }
         buy.ОткрытьСделку(0);
        }
      if(сигнал==-1 && sell.КоличествоСделок()==0)
        {
         //продажа
         if(ПАРЦИАЛЬНОЕ_УПРАВЛЕНИЕ)
           {
            if(РАЗДЕЛЬНОЕ_УПРАВЛЕНИЕ)
               sell.ВесСделки(porciSell.ВесВПорции());
            else
               sell.ВесСделки(porci.ВесВПорции());
           }
         sell.ОткрытьСделку(0);
        }
     }

  }
//+------------------------------------------------------------------+
